// 31. Задать массив из 8 элементов и вывести их на экран 
// 32. Задать массив из 8 элементов, заполненных нулями и единицами вывести их на экран 
// 33. Задать массив из 12 элементов, заполненных числами из [0,9]. Найти сумму положительных/отрицательных элементов массива

// 34. Написать программу замену элементов массива на противоположные
// 35. Определить, присутствует ли в заданном массиве, некоторое число
int[] array (int number)
{
    return new int [number];
} 
int[] arr (int[] array, int min, int max)
{
    for (int i = 0; i < array.Length; i++)
    {
        array[i] = new Random().Next (1,127);
    }
return array;
}
string print (int[] array)
{
    string numbers = String.Empty;
        for (int i = 0; i < array.Length; i++)
        {
            numbers = numbers+$"{array[i]} ";
        }
return numbers;
}
int[] b = array(12);

// string sum (int[] c) 
// {
//     string rez = String.Empty;
//         for (int i = 0; i < b.Length+1; i++)
//         {
//         int rezult = 0;
//          rezult = rezult + b[i];
//         rez = rez+$"{rezult} ";
//         }
//     return rez;
// }
// // int sum = 0;
// // for (int i = 0; i < b.Length; i++)
// // {
// //  sum = sum + b[i];
// // }

// // Console.WriteLine(sum);

// // // string revers(int[] c)
// // // {
// // // string rev = String.Empty;

// // // int i = b.Length - 1;
// // //     while ( i >= 0)
// // //     {
// // //         rev = rev + $"{b[i]} ";
// // //        i = i-1; 
// // //     }
// // // return rev; 
// // // }
arr(b,0,11);
Console.WriteLine(print(b));
 // // //Console.WriteLine(revers(b));
// // // //   bool sear (int[] d)
// // // //  {
     
// // // //      for (int i = 0; i < b.Length; i++)
// // // //      {
// // // //          if (b[i] == 5 )
// // // //          {
// // // //           return true;
// // // //          } 
// // // //      }
// // // //     return false;
// // // //  }
// // // //  Console.WriteLine (sear (b));

 // 36. Задать массив, заполнить случайными положительными трёхзначными числами. 
 // Показать количество нечетных\четных чисел
// 37. В одномерном массиве из 123 чисел найти количество элементов из oтрезка [10,99]
// 38. Найти сумму чисел одномерного массива стоящих на нечетной позиции
// // // // // string number (int[] num)
// // // // // {
// // // // //     string sum = String.Empty;
// // // // //     int count =0;
// // // // //         for (int i = 0; i < b.Length; i++)
// // // // //         {
// // // // //             if (b[i]>9 && b[i]<100)
// // // // //             {
// // // // //             count+=1;
// // // // //             sum += $"{b[i]} ";
// // // // //             }
// // // // //         }
// // // // //         Console.WriteLine(count);
// // // // //     return sum;
// // // // //     }
// // // // // Console.WriteLine (number(b));
// 38. Найти сумму чисел одномерного массива стоящих на нечетной позиции
// 39. Найти произведение пар чисел в одномерном массиве. Парой считаем первый и последний элемент, второй и предпоследний и т.д.
// // // // // // int sum (int[] a)
// // // // // // {
// // // // // //     int summa = 0;
// // // // // //     for (int i = 0; i < b.Length; i++)
// // // // // //     {
// // // // // //         if (i%2!=0)  
// // // // // //         {
// // // // // //             summa=summa+b[i];
// // // // // //         }
// // // // // //     }
// // // // // // return summa;
// // // // // // }
// // // // // //  Console.WriteLine(sum (b));   
// // // // // // //   string rez (int[] xxx)
// // // // // // // {
// // // // // // //       string reg = String.Empty;
// // // // // // //         for (int i = 0; i < b.Length/2; i++)
// // // // // // //     {
// // // // // // //         int rezult = b[i]*b[b.Length - 1-i]; 
// // // // // // //         reg=reg+$"{rezult} ";
// // // // // // //     }
// // // // // // // return reg;
// // // // // // // }
// // // // // // // Console.WriteLine(rez(b));

// 40. В Указанном массиве вещественных чисел найдите разницу между максимальным и минимальным элементом
// // // // // // // // int rezult(int[] d)
// // // // // // // // {
// // // // // // // //     int rez = 0;
// // // // // // // //     int max = b[0];
// // // // // // // //     int min = b[0];
// // // // // // // //     for (int i = 0; i < b.Length; i++)
// // // // // // // //     {
// // // // // // // //         if(b[i]>max)
// // // // // // // //         {
// // // // // // // //             max = b[i];
// // // // // // // //         }
// // // // // // // //         if(b[i]<min) 
// // // // // // // //         {
// // // // // // // //             min = b[i];
// // // // // // // //         }
// // // // // // // //     }
// // // // // // // // rez = max-min;
// // // // // // // // return rez;
// // // // // // // // }
// // // // // // // // Console.WriteLine(rezult(b));